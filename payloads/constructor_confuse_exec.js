(() => {
  log("[*] constructor_confuse_exec_fixed ‚Äì __proto__ d√©tourn√© pour confusion prototype", "info");

  const fakeProto = {
    toString: function () {
      log("[!] FAKE prototype toString() ex√©cut√©", "error");
      return "[confused]";
    },
    valueOf: function () {
      log("[!] FAKE prototype valueOf() ex√©cut√©", "error");
      return 1337;
    }
  };

  const obj = { marker: 0x1337 };
  obj.__proto__ = fakeProto; // üß¨ override r√©el du prototype

  try {
    const t = obj.toString();
    log(`[‚úî] R√©sultat toString(): ${t}`, "success");
  } catch (e) {
    log(`[!] Exception toString(): ${e.message}`, "error");
  }

  try {
    const v = obj + 1;
    log(`[‚úî] R√©sultat obj + 1: ${v}`, "success");
  } catch (e) {
    log(`[!] Exception valueOf(): ${e.message}`, "error");
  }

  log("[‚úì] Fin test constructor_confuse_exec_fixed", "info");
})();
